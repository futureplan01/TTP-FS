{"ast":null,"code":"/**\r\n * Module dependencies\r\n */\nvar debug = require('debug')('jsonp');\n/**\r\n * Module exports.\r\n */\n\n\nmodule.exports = jsonp;\n/**\r\n * Callback index.\r\n */\n\nvar count = 0;\n/**\r\n * Noop function.\r\n */\n\nfunction noop() {}\n/**\r\n * JSONP handler\r\n *\r\n * Options:\r\n *  - param {String} qs parameter (`callback`)\r\n *  - prefix {String} qs parameter (`__jp`)\r\n *  - name {String} qs parameter (`prefix` + incr)\r\n *  - timeout {Number} how long after a timeout error is emitted (`60000`)\r\n *\r\n * @param {String} url\r\n * @param {Object|Function} optional options / callback\r\n * @param {Function} optional callback\r\n */\n\n\nfunction jsonp(url, opts, fn) {\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n\n  if (!opts) opts = {};\n  var prefix = opts.prefix || '__jp'; // use the callback name that was passed if one was provided.\n  // otherwise generate a unique name by incrementing our counter.\n\n  var id = opts.name || prefix + count++;\n  var param = opts.param || 'callback';\n  var timeout = null != opts.timeout ? opts.timeout : 60000;\n  var enc = encodeURIComponent;\n  var target = document.getElementsByTagName('script')[0] || document.head;\n  var script;\n  var timer;\n\n  if (timeout) {\n    timer = setTimeout(function () {\n      cleanup();\n      if (fn) fn(new Error('Timeout'));\n    }, timeout);\n  }\n\n  function cleanup() {\n    if (script.parentNode) script.parentNode.removeChild(script);\n    window[id] = noop;\n    if (timer) clearTimeout(timer);\n  }\n\n  function cancel() {\n    if (window[id]) {\n      cleanup();\n    }\n  }\n\n  window[id] = function (data) {\n    debug('jsonp got', data);\n    cleanup();\n    if (fn) fn(null, data);\n  }; // add qs component\n\n\n  url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);\n  url = url.replace('?&', '?');\n  debug('jsonp req \"%s\"', url); // create script\n\n  script = document.createElement('script');\n  script.src = url;\n  target.parentNode.insertBefore(script, target);\n  return cancel;\n}","map":null,"metadata":{},"sourceType":"script"}