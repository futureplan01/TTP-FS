{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesai\\\\Desktop\\\\javascript\\\\ttp-fs\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from \"./logo.svg\"; // COMPONENTS\n\nimport SignIn from './Components/SignIn';\nimport Portfolio from './Components/PortfolioContainer';\nimport Transaction from './Components/TransactionContainer';\nimport Register from './Components/Register';\n\nfunction ErrorPage() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"No match for \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, window.location.href)));\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Account: 0,\n      Transaction: []\n    };\n    this.updateTransaction = this.updateTransaction.bind(this);\n    this.updateAccount = this.updateAccount.bind(this);\n    this.getAccount = this.getAccount.bind(this);\n  }\n\n  updateTransaction(x) {\n    let array = this.state.Transaction;\n    array.push(x);\n    this.setState({\n      Transaction: array\n    });\n  }\n\n  updateAccount(x) {\n    this.setState({\n      Account: x\n    });\n  }\n\n  getTransaction() {\n    return this.state.Transaction;\n  }\n\n  getAccount() {\n    return this.state.Account;\n  }\n\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(SignIn, {\n        updateAccount: this.updateAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Portfolio\",\n      render: () => React.createElement(Portfolio, {\n        updateAccount: this.updateAccount,\n        updateTransaction: this.updateTransaction,\n        getAccount: this.getAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Transaction\",\n      render: () => React.createElement(Transaction, {\n        allTransaction: this.state.Transaction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Register\",\n      render: () => React.createElement(Register, {\n        changeAccount: this.changeAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: ErrorPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\jesai\\Desktop\\javascript\\ttp-fs\\client\\src\\App.js"],"names":["React","Component","Route","Switch","SignIn","Portfolio","Transaction","Register","ErrorPage","window","location","href","App","constructor","state","Account","updateTransaction","bind","updateAccount","getAccount","x","array","push","setState","getTransaction","render","changeAccount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from './logo.svg';\n\n// COMPONENTS\nimport SignIn from './Components/SignIn';\nimport Portfolio from './Components/PortfolioContainer';\nimport Transaction from './Components/TransactionContainer';\nimport Register from './Components/Register';\n\nfunction ErrorPage(){\n  return (<div>\n    <h3>No match for <code>{window.location.href }</code></h3>\n  </div>)\n}\n\nclass App extends Component {\n  constructor (){\n    super();\n    this.state = {Account: 0, Transaction: []};\n    this.updateTransaction = this.updateTransaction.bind(this);\n    this.updateAccount = this.updateAccount.bind(this);\n    this.getAccount = this.getAccount.bind(this);\n  }\n\n  updateTransaction(x){\n    let array = this.state.Transaction;\n    array.push(x);\n    this.setState({Transaction: array});\n  }\n  updateAccount(x){\n    this.setState({Account: x});\n  }\n  getTransaction(){\n    return this.state.Transaction\n  }\n  getAccount(){\n    return this.state.Account;\n  }\n\n\n  render(){\n    return (\n      <Switch>\n        <Route exact path = \"/\" render={()=>\n          <SignIn updateAccount={this.updateAccount} />\n        } />\n        \n        <Route exact path = \"/Portfolio\" render={()=>\n          <Portfolio updateAccount={this.updateAccount} updateTransaction ={this.updateTransaction} getAccount={this.getAccount}/>\n        }/>\n\n        <Route exact path = \"/Transaction\" render={()=>\n         <Transaction allTransaction={this.state.Transaction}/>\n        }/>\n\n        <Route exact path = \"/Register\" render={()=>\n         <Register changeAccount={this.changeAccount}/>\n        }/>\n\n        <Route component = {ErrorPage}/>\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}