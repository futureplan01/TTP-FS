{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesai\\\\Desktop\\\\javascript\\\\ttp-fs\\\\client\\\\src\\\\Components\\\\Portfolio.js\";\nimport React, { Component } from 'react';\nimport jsonp from 'jsonp';\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockArray: [],\n      symbol: '',\n      price: 0,\n      size: 1,\n      error: false\n    };\n    this.getStocks = this.getStocks.bind(this);\n    this.stockClick = this.stockClick.bind(this);\n    this.selectStock = this.selectStock.bind(this);\n    this.buyStock = this.buyStock.bind(this);\n  }\n\n  buyStock() {\n    let value = Number(this.state.size);\n\n    if (this.state.price >= this.props.getAccount() || !Number.isInteger(value)) {\n      this.setState({\n        error: true\n      });\n    } else {\n      // Buy the Stock\n      console.log('We Made it Fam');\n      let newAccount = this.props.getAccount() - this.state.price;\n      this.props.updateAccount(newAccount); // save Transaction \n    }\n  }\n\n  getStocks() {\n    jsonp('https://ws-api.iextrading.com/1.0/tops/last', null, (err, data) => {\n      if (err) {\n        console.log(err);\n      } else {\n        this.setState({\n          stockArray: data\n        });\n      }\n    });\n  }\n\n  selectStock(e) {\n    this.setState({\n      size: e.target.value\n    });\n  } // Symbol Price Stock\n\n\n  stockClick(e) {\n    let values = e.currentTarget.textContent;\n    let array = values.split(',');\n    this.setState({\n      symbol: array[0],\n      price: array[1]\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.stockArray.length == 0) this.getStocks();\n  }\n\n  render() {\n    let ErrorMessage;\n\n    if (this.state.error) {\n      ErrorMessage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Please Make Sure You Have Enough Cash!\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \"Or You Have Selected A Whole Number\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"Portfolio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Portfolio\"), React.createElement(\"div\", {\n      id: \"Portfolio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Symbol, Price, Stock\"), React.createElement(\"div\", {\n      className: \"split\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"PortfolioContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.stockArray.map((stock, num) => {\n      return React.createElement(\"div\", {\n        key: num,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stockContainer\",\n        onClick: this.stockClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"stockSymbol\",\n        className: \"stock symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, stock.symbol), \",\", React.createElement(\"span\", {\n        className: \"stock price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, stock.price), \",\", React.createElement(\"span\", {\n        className: \"stock size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, stock.size)));\n    }))), React.createElement(\"div\", {\n      id: \"PurchaseContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"Purchase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Cash - \", this.props.getAccount()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      readOnly: true,\n      value: this.state.price * this.state.size,\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.selectStock,\n      value: this.state.size,\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.buyStock,\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" BUY\")), ErrorMessage)));\n  }\n\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["C:\\Users\\jesai\\Desktop\\javascript\\ttp-fs\\client\\src\\Components\\Portfolio.js"],"names":["React","Component","jsonp","Portfolio","constructor","props","state","stockArray","symbol","price","size","error","getStocks","bind","stockClick","selectStock","buyStock","value","Number","getAccount","isInteger","setState","console","log","newAccount","updateAccount","err","data","e","target","values","currentTarget","textContent","array","split","componentDidMount","length","render","ErrorMessage","map","stock","num"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport jsonp from 'jsonp';\r\n\r\nclass Portfolio extends Component{\r\n    \r\n    constructor (props){\r\n        super(props);\r\n        this.state = {stockArray: [], symbol: '', price:0,size: 1,error:false};\r\n        this.getStocks = this.getStocks.bind(this);\r\n        this.stockClick = this.stockClick.bind(this);\r\n        this.selectStock = this.selectStock.bind(this);\r\n        this.buyStock = this.buyStock.bind(this);\r\n    }\r\n    buyStock(){\r\n        let value = Number(this.state.size);\r\n        if(this.state.price >= this.props.getAccount()|| !Number.isInteger(value) ){\r\n            this.setState({error:true});\r\n        }else{\r\n            // Buy the Stock\r\n            console.log('We Made it Fam');\r\n            let newAccount = this.props.getAccount() - this.state.price;\r\n            this.props.updateAccount(newAccount);\r\n\r\n            // save Transaction \r\n        }\r\n    }\r\n    getStocks(){\r\n        jsonp('https://ws-api.iextrading.com/1.0/tops/last',null,(err,data)=>{\r\n            if(err){\r\n                console.log(err);\r\n            }else{\r\n                this.setState({stockArray: data});\r\n            }\r\n        })\r\n    }\r\n    selectStock(e){\r\n        this.setState({size: e.target.value})\r\n    }\r\n    // Symbol Price Stock\r\n    stockClick(e){\r\n        let values = e.currentTarget.textContent;\r\n        let array = values.split(',');\r\n        this.setState({symbol: array[0], price:array[1]});\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.stockArray.length ==0)\r\n            this.getStocks();\r\n    }\r\n    render(){\r\n        \r\n        let ErrorMessage;\r\n        if(this.state.error){\r\n            ErrorMessage = <div> \r\n                Please Make Sure You Have Enough Cash!\r\n                <br/>\r\n                Or You Have Selected A Whole Number\r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n            <h1 id='Portfolio'> Portfolio</h1>\r\n            <div id='Portfolio'>Symbol, Price, Stock</div>\r\n            <div className = 'split'>\r\n                <div id= 'PortfolioContainer'>\r\n                    <div>\r\n                    {this.state.stockArray.map((stock,num)=>{\r\n                         return(\r\n                         <div key={num}>\r\n                             <div className='stockContainer' onClick={this.stockClick}>\r\n                                <span id ='stockSymbol'className ='stock symbol'>{stock.symbol}</span>,\r\n                                <span  className ='stock price'>{stock.price}</span>,\r\n                                <span  className ='stock size'>{stock.size}</span>\r\n                            </div>\r\n                            </div>)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div id='PurchaseContainer'>\r\n                    <div>\r\n                        <div id='Purchase'>Cash - {this.props.getAccount()}</div>\r\n                        <br/>\r\n                        <input readOnly value ={this.state.price*this.state.size} className = 'input'/>\r\n                        <br/>\r\n                        <input onChange={this.selectStock} value={this.state.size} className = 'input'/>\r\n                        <br/>\r\n                        <button onClick={this.buyStock} className = 'button'> BUY</button>\r\n                    </div>\r\n                    {ErrorMessage}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portfolio;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}