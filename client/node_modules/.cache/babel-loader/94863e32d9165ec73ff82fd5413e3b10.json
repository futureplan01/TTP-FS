{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesai\\\\Desktop\\\\javascript\\\\ttp-fs\\\\client\\\\src\\\\Components\\\\Portfolio.js\";\nimport React, { Component } from 'react';\nimport jsonp from 'jsonp';\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockArray: [],\n      symbol: '',\n      price: 0,\n      size: 1,\n      error: false\n    };\n    this.getStocks = this.getStocks.bind(this);\n    this.stockClick = this.stockClick.bind(this);\n    this.selectStock = this.selectStock.bind(this);\n    this.buyStock = this.buyStock.bind(this);\n  }\n\n  buyStock() {\n    if (this.state.price > this.props.getAccount() || !Number.isInteger(this.state.value)) {\n      this.setState({\n        error: true\n      });\n    } else {// Buy the Stock\n    }\n  }\n\n  getStocks() {\n    jsonp('https://ws-api.iextrading.com/1.0/tops/last', null, (err, data) => {\n      if (err) {\n        console.log(err);\n      } else {\n        this.setState({\n          stockArray: data\n        });\n      }\n    });\n  }\n\n  selectStock(e) {\n    if (!e.target.value == '') {\n      let newPrice = this.state.price;\n      newPrice *= e.target.value;\n      this.setState({\n        size: e.target.value,\n        price: newPrice\n      });\n    } else {\n      this.setState({\n        size: e.target.value\n      });\n    }\n  } // Symbol Price Stock\n\n\n  stockClick(e) {\n    let values = e.currentTarget.textContent;\n    let array = values.split(',');\n    this.setState({\n      symbol: array[0],\n      price: array[1]\n    });\n  }\n\n  componentDidMount() {}\n\n  ErrorMessage() {}\n\n  render() {\n    let ErrorMessage;\n\n    if (this.state.error) {\n      ErrorMessage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Please Make Sure You Have An is Integer And Enough Cash!\");\n    }\n\n    if (this.state.stockArray.length == 0) this.getStocks();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"Portfolio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Portfolio\"), React.createElement(\"div\", {\n      id: \"Portfolio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Symbol, Price, Stock\"), React.createElement(\"div\", {\n      className: \"split\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"PortfolioContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.stockArray.map((stock, num) => {\n      return React.createElement(\"div\", {\n        key: num,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stockContainer\",\n        onClick: this.stockClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"stockSymbol\",\n        className: \"stock symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, stock.symbol), \",\", React.createElement(\"span\", {\n        className: \"stock price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, stock.price), \",\", React.createElement(\"span\", {\n        className: \"stock size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, stock.size)));\n    }))), React.createElement(\"div\", {\n      id: \"PurchaseContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"Purchase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Cash - \", this.props.getAccount()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      readOnly: true,\n      value: this.state.price,\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.selectStock,\n      value: this.state.size,\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onSubmit: this.buyStock,\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" BUY\")), ErrorMessage)));\n  }\n\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["C:\\Users\\jesai\\Desktop\\javascript\\ttp-fs\\client\\src\\Components\\Portfolio.js"],"names":["React","Component","jsonp","Portfolio","constructor","props","state","stockArray","symbol","price","size","error","getStocks","bind","stockClick","selectStock","buyStock","getAccount","Number","isInteger","value","setState","err","data","console","log","e","target","newPrice","values","currentTarget","textContent","array","split","componentDidMount","ErrorMessage","render","length","map","stock","num"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport jsonp from 'jsonp';\r\n\r\nclass Portfolio extends Component{\r\n    \r\n    constructor (props){\r\n        super(props);\r\n        this.state = {stockArray: [], symbol: '', price:0,size: 1,error:false};\r\n        this.getStocks = this.getStocks.bind(this);\r\n        this.stockClick = this.stockClick.bind(this);\r\n        this.selectStock = this.selectStock.bind(this);\r\n        this.buyStock = this.buyStock.bind(this);\r\n    }\r\n    buyStock(){\r\n        if(this.state.price > this.props.getAccount()|| !Number.isInteger(this.state.value) ){\r\n            this.setState({error:true});\r\n        }else{\r\n            // Buy the Stock\r\n\r\n        }\r\n    }\r\n    getStocks(){\r\n        jsonp('https://ws-api.iextrading.com/1.0/tops/last',null,(err,data)=>{\r\n            if(err){\r\n                console.log(err);\r\n            }else{\r\n                this.setState({stockArray: data});\r\n            }\r\n        })\r\n    }\r\n    selectStock(e){\r\n        if(!e.target.value == ''){\r\n            let newPrice = this.state.price;\r\n            newPrice *= e.target.value;\r\n            this.setState({size: e.target.value, price: newPrice})\r\n        }else{\r\n            this.setState({size: e.target.value})\r\n        }\r\n    }\r\n    // Symbol Price Stock\r\n    stockClick(e){\r\n        let values = e.currentTarget.textContent;\r\n        let array = values.split(',');\r\n        this.setState({symbol: array[0], price:array[1]});\r\n\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    ErrorMessage(){\r\n\r\n    }\r\n    render(){\r\n        let ErrorMessage;\r\n        if(this.state.error){\r\n            ErrorMessage = <div> \r\n                Please Make Sure You Have An is Integer And Enough Cash!\r\n            </div>\r\n        }\r\n        if(this.state.stockArray.length ==0)\r\n            this.getStocks();\r\n        return (\r\n            <div>\r\n            <h1 id='Portfolio'> Portfolio</h1>\r\n            <div id='Portfolio'>Symbol, Price, Stock</div>\r\n            <div className = 'split'>\r\n                <div id= 'PortfolioContainer'>\r\n                    <div>\r\n                    {this.state.stockArray.map((stock,num)=>{\r\n                         return(\r\n                         <div key={num}>\r\n                             <div className='stockContainer' onClick={this.stockClick}>\r\n                                <span id ='stockSymbol'className ='stock symbol'>{stock.symbol}</span>,\r\n                                <span  className ='stock price'>{stock.price}</span>,\r\n                                <span  className ='stock size'>{stock.size}</span>\r\n                            </div>\r\n                            </div>)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div id='PurchaseContainer'>\r\n                    <div>\r\n                        <div id='Purchase'>Cash - {this.props.getAccount()}</div>\r\n                        <br/>\r\n                        <input readOnly value ={this.state.price} className = 'input'/>\r\n                        <br/>\r\n                        <input onChange={this.selectStock} value={this.state.size} className = 'input'/>\r\n                        <br/>\r\n                        <button onSubmit={this.buyStock} className = 'button'> BUY</button>\r\n                    </div>\r\n                    {ErrorMessage}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portfolio;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}