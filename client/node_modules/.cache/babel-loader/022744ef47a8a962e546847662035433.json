{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesai\\\\Desktop\\\\javascript\\\\ttp-fs\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport axios from 'axios'; // COMPONENTS\n\nimport SignIn from './Components/SignIn';\nimport Portfolio from './Components/PortfolioContainer';\nimport Transaction from './Components/TransactionContainer';\nimport Register from './Components/Register';\n/*\r\n  Routes Are Handled in the Main App.js\r\n\r\n  Portfolio and Transaction Routes have a container\r\n  Therefore any props passed to through the Portfolio and Transaction routes\r\n  Must Also be passed through the container to the Actual Components.\r\n*/\n\nfunction ErrorPage() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"No match for \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, window.location.href)));\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Transaction: [],\n      isAuth: false,\n      User: {\n        email: '',\n        account: 0,\n        transaction: []\n      }\n    };\n    this.updateTransaction = this.updateTransaction.bind(this);\n    this.updateAccount = this.updateAccount.bind(this);\n    this.getAccount = this.getAccount.bind(this);\n    this.getTransaction = this.getTransaction.bind(this);\n    this.verifyToken = this.verifyToken.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  updateUser(x) {\n    localStorage.setItem('token', x.token);\n    this.setState({\n      User: x,\n      isAuth: true\n    });\n  }\n\n  verifyToken() {\n    let value = localStorage.getItem('token');\n\n    if (!value) {\n      return false;\n    } else {\n      axios.post('http://localhost:3010/verifyToken', {\n        crossDomain: true,\n        token: value\n      }).then(user => {\n        this.setState({\n          isAuth: true\n        });\n      }).catch(err => {\n        console.log(err);\n        return false;\n      });\n    }\n  }\n\n  updateTransaction(x) {\n    axios.post('http://localhost:3010/updateTransaction', {\n      crossDomain: true,\n      email: this.state.User.email.toLowerCase(),\n      transaction: x\n    }).then(user => {\n      if (user) {\n        let email = this.state.User.email;\n        let account = this.state.User.account;\n        this.setState({\n          User: {\n            email: email,\n            account: account,\n            transaction: user.data.transaction\n          }\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  IsAuthTrue() {\n    this.setState();\n  }\n\n  updateAccount(x) {\n    console.log();\n    let email = this.state.User.email;\n    axios.post('http://localhost:3010/updateAccount', {\n      crossDomain: true,\n      email: this.state.User.email.toLowerCase(),\n      account: x\n    }).then(user => {\n      console.log(\"Updated Account Completed\");\n\n      if (user) {\n        console.log(user);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    this.setState({\n      User: {\n        email: email,\n        account: x\n      }\n    });\n  }\n\n  getTransaction() {\n    return this.state.User.transaction;\n  }\n\n  getAccount() {\n    return this.state.User.account;\n  }\n\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(SignIn, {\n        updateAccount: this.updateAccount,\n        isAuth: this.state.isAuth,\n        updateUser: this.updateUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Portfolio\",\n      render: () => React.createElement(Portfolio, {\n        updateAccount: this.updateAccount,\n        isAuth: this.state.isAuth,\n        verifyToken: this.verifyToken,\n        updateTransaction: this.updateTransaction,\n        getAccount: this.getAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Transaction\",\n      render: () => React.createElement(Transaction, {\n        getTransaction: this.getTransaction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Register\",\n      render: () => React.createElement(Register, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: ErrorPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\jesai\\Desktop\\javascript\\ttp-fs\\client\\src\\App.js"],"names":["React","Component","Route","Switch","axios","SignIn","Portfolio","Transaction","Register","ErrorPage","window","location","href","App","constructor","state","isAuth","User","email","account","transaction","updateTransaction","bind","updateAccount","getAccount","getTransaction","verifyToken","updateUser","x","localStorage","setItem","token","setState","value","getItem","post","crossDomain","then","user","catch","err","console","log","toLowerCase","data","IsAuthTrue","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport logo from './logo.svg';\r\nimport axios from 'axios';\r\n\r\n// COMPONENTS\r\nimport SignIn from './Components/SignIn';\r\nimport Portfolio from './Components/PortfolioContainer';\r\nimport Transaction from './Components/TransactionContainer';\r\nimport Register from './Components/Register';\r\n\r\n/*\r\n  Routes Are Handled in the Main App.js\r\n\r\n  Portfolio and Transaction Routes have a container\r\n  Therefore any props passed to through the Portfolio and Transaction routes\r\n  Must Also be passed through the container to the Actual Components.\r\n*/\r\n\r\nfunction ErrorPage(){\r\n  return (<div>\r\n    <h3>No match for <code>{window.location.href }</code></h3>\r\n  </div>)\r\n}\r\n\r\nclass App extends Component {\r\n  constructor (){\r\n    super();\r\n    this.state = { Transaction: [], isAuth: false, User: {email:'',account: 0, transaction: []}};\r\n    this.updateTransaction = this.updateTransaction.bind(this);\r\n    this.updateAccount = this.updateAccount.bind(this);\r\n    this.getAccount = this.getAccount.bind(this);\r\n    this.getTransaction = this.getTransaction.bind(this);\r\n    this.verifyToken = this.verifyToken.bind(this);\r\n    this.updateUser=this.updateUser.bind(this);\r\n  }\r\n  updateUser(x){\r\n    localStorage.setItem('token', x.token);\r\n    this.setState({User:x,isAuth:true});\r\n  }\r\n\r\n  verifyToken(){\r\n    let value = localStorage.getItem('token');\r\n    if(!value) {\r\n      return false;\r\n    }else{\r\n      axios.post('http://localhost:3010/verifyToken',{\r\n        crossDomain:true,\r\n        token:value\r\n      })\r\n      .then((user)=>{\r\n        this.setState({isAuth:true});\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err);\r\n        return false;\r\n      })\r\n    }\r\n  }\r\n\r\n  updateTransaction(x){\r\n    axios.post('http://localhost:3010/updateTransaction',{\r\n      crossDomain:true,\r\n      email: this.state.User.email.toLowerCase(),\r\n      transaction: x\r\n    }).then((user)=>{\r\n      if(user) {\r\n        let email = this.state.User.email;\r\n        let account = this.state.User.account;\r\n        this.setState({User:{email:email,account:account,transaction:user.data.transaction}});\r\n      }\r\n    })\r\n    .catch((err)=>{console.log(err)})\r\n  }\r\n\r\n  IsAuthTrue(){\r\n    this.setState()\r\n  }\r\n\r\n  updateAccount(x){\r\n    console.log()\r\n    let email = this.state.User.email;\r\n    axios.post('http://localhost:3010/updateAccount',{\r\n      crossDomain:true,\r\n      email: this.state.User.email.toLowerCase(),\r\n      account: x\r\n    })\r\n    .then((user)=>{\r\n      console.log(\"Updated Account Completed\");\r\n      if(user) {\r\n        console.log(user);\r\n      }\r\n    })\r\n    .catch((err)=>{console.log(err)})\r\n\r\n    this.setState({User:{email:email,account:x}});\r\n  }\r\n\r\n  getTransaction(){\r\n    return this.state.User.transaction;\r\n  }\r\n  getAccount(){\r\n    return this.state.User.account;\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <Switch>\r\n        <Route exact path = \"/\" render={()=>\r\n          <SignIn updateAccount={this.updateAccount} isAuth={this.state.isAuth} updateUser={this.updateUser}/>\r\n        } />\r\n        \r\n        <Route exact path = \"/Portfolio\" render={()=>\r\n          <Portfolio updateAccount={this.updateAccount} isAuth={this.state.isAuth}  verifyToken={this.verifyToken} updateTransaction ={this.updateTransaction} getAccount={this.getAccount}/>\r\n        }/>\r\n\r\n        <Route exact path = \"/Transaction\" render={()=>\r\n         <Transaction  getTransaction={this.getTransaction}/>\r\n        }/>\r\n\r\n        <Route exact path = \"/Register\" render={()=>\r\n         <Register />\r\n        }/>\r\n\r\n        <Route component = {ErrorPage}/>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}